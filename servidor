import java.net.*;
import java.util.*;
import java.io.*;
public class Servidor {
public static String aux="";
	public static void main(String args[]) {

		try {

			DatagramSocket socketUDP = new DatagramSocket(
					Integer.parseInt(args[0]));
			byte[] bufer = new byte[1000];
			// Construimos el DatagramPacket para recibir peticiones
			DatagramPacket peticion = new DatagramPacket(bufer,	bufer.length);
//			ServerSocket serv = new ServerSocket(Integer.parseInt(args[0]));
	//		Socket so = new Socket();
		    aux=args[1];
			ArrayList<String> probs= leearchivo(args[1]);

			while (true) {
				
				

				// Leemos una petici칩n del DatagramSocket
				socketUDP.receive(peticion);
				
				String str1 = new String(peticion.getData());
			
				System.out.print("\nFlaaaaaaaaaaaaaaaaaaaaaaag: "+str1+"\n");
					//obtenemos proverbio
				
			      int numaleatorio = (int) (Math.random()*(probs.size()-1)+1);		    	
				String pro = probs.get(numaleatorio);
					// Construimos el DatagramPacket para enviar la respuesta							
					byte[] proverbi = pro.getBytes();
					DatagramPacket respuesta = new DatagramPacket(proverbi, proverbi.length,	peticion.getAddress(), peticion.getPort());
					// Enviamos la respuesta
					socketUDP.send(respuesta);
				
				if(peticion.getLength()!=4){
					servidortcp(args[0]);
					/*while(true){
				
					so = serv.accept();

					// Inicia hilo

					thread cliThread = new thread(so);
					cliThread.start();
					}*/
				}
			}

		} catch (SocketException e) {
			System.out.println("Socket: " + e.getMessage());
		} catch (IOException e) {
			System.out.println("IO: " + e.getMessage());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	 private static void servidortcp(String puerto) throws Exception {

			// Inicializaci칩n del socket con puerto como par치metro de entrada

			
			// Servidor siempre esperando conexi칩n
		 ServerSocket serv = new ServerSocket(Integer.parseInt(puerto));
			
			Socket so = new Socket();
			while (true) {
				

                 
				so = serv.accept();

				// Inicia hilo

				thread cliThread = new thread(so);
				cliThread.start();
						

			}
			
		}
		
		
	

	public static ArrayList<String> leearchivo(String archivo) throws FileNotFoundException, IOException {
		
	      String proverbio = "";
	      ArrayList<String> probs= new ArrayList<String>();
	    
	      FileReader f = new FileReader(archivo);
	      BufferedReader b = new BufferedReader(f);
	  
	     
	     while (proverbio!=null) {
	       proverbio=b.readLine();
	       if(proverbio!=null){
	    	   probs.add(proverbio);
	       }
	     }
	      

		
		
	      int numaleatorio = (int) (Math.random()*(probs.size()-1)+1);
	    
	      proverbio = probs.get(numaleatorio);;
	      b.close();
	      return probs;
}
	
	
	}


		

